name: E2E on Chrome

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install frontend entrance dependencies and start server
      # test comment
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Start frontend server
        working-directory: ./frontend
        run: npm start &

      # Install backend dependencies and start server
      - name: Create python environment
        working-directory: ./backend
        run: python -m venv venv

      - name: Activate python environment
        working-directory: ./backend
        run: source venv/bin/activate

      - name: Install backend dependencies
        working-directory: ./backend
        run: pip install -r requirements.txt

      - name: Start backend server
        working-directory: ./backend
        run: python manage.py runserver &

      # Run Unit tests Django and capture coverage report
      - name: Run Unit tests Django
        working-directory: ./backend
        run: |
          coverage run manage.py test
          coverage report > coverage_report.txt

      # Save coverage report to repository
      - name: Save coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./backend/coverage_report.txt

      # Install Cypress and run tests
      - name: Install Cypress
        working-directory: ./frontend
        run: npm install cypress --save-dev

      - name: Run Cypress tests
        working-directory: ./frontend
        run: npx cypress run > report_cypress.txt

      # Save Cypress report to repository
      - name: Save Cypress report
        uses: actions/upload-artifact@v2
        with:
          name: cypress-report
          path: ./frontend/report_cypress.txt
          
      - name: Copy Artifacts
        run: |
          cp ${{ github.workspace }}/backend/coverage_report.txt .
          cp ${{ github.workspace }}/frontend/report_cypress.txt .

      # Commit and push the changes
     - name: Commit Artifacts
       env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
       run: |
        git config user.email "you@example.com"
        git config user.name "Your Name"
        git checkout -b feature-branch
        git add .
        git commit -m "Add coverage report and Cypress output"
        git push origin feature-branch

      
