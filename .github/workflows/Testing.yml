name: Testing 

on: [push]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository and the branch
        uses: actions/checkout@v2

      - name: Create python environment
        working-directory: ./backend
        run: python -m venv venv

      - name: Activate python environment
        working-directory: ./backend
        run: source venv/bin/activate

      - name: Install backend dependencies
        working-directory: ./backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_STORAGE_BUCKET_NAME: ${{secrets.AWS_STORAGE_BUCKET_NAME}}
          AWS_S3_REGION_NAME: ${{secrets.AWS_S3_REGION_NAME}}
        run: | 
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
          pip install --no-cache-dir -r requirements.txt

      - name: Start backend server & perform unit tests
        working-directory: ./backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_STORAGE_BUCKET_NAME: ${{secrets.AWS_STORAGE_BUCKET_NAME}}
          AWS_S3_REGION_NAME: ${{secrets.AWS_S3_REGION_NAME}}
        run: |
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
          python manage.py makemigrations 
          python manage.py migrate 
          python manage.py runserver &
          coverage run manage.py test 
          coverage report --omit '*/dist-packages/*' > coverage_report.json 


  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout the repository and the branch
        uses: actions/checkout@v2

      - name: Install frontend entrance dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Start backend server
        working-directory: ./backend
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --no-cache-dir -r requirements.txt
          python manage.py makemigrations
          python manage.py migrate
          python manage.py runserver &
          
      - name: Start frontend server
        working-directory: ./frontend
        run: npm start &

      - name: Install Cypress
        working-directory: ./frontend
        run: | 
          npm install cypress --save-dev
          npm install @cypress/code-coverage --save-dev
          npm install --save-dev @cypress/instrument-cra
          npx cypress run 
          npx nyc report --reporter=text > frontend-test.json
          
      - name: Save frontend coverage report 
        uses: actions/upload-artifact@v2
        with:
          name: cypress-report
          path: ./frontend/frontend-test.json

  codecov:
    name: Upload Coverage Reports to Codecov
    runs-on: ubuntu-latest
    needs: [frontend, backend]

    steps:
      - name: Checkout the repository and the branch
        uses: actions/checkout@v2

      - name: Upload frontend coverage report to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./frontend/frontend-test.json

      - name: Upload backend coverage report to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./backend/coverage_report.json



          
  
