name: Testing 
# This workflows simulates an environment to test the entire application using unit testing, integration testing and system testing.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install frontend entrance dependencies and start server
      - name: Start frontend server
        working-directory: ./frontend
        run: |
          npm ci
          npm start &

      # Install backend dependencies and start server
      - name: Create python environment
        working-directory: ./backend
        run: python -m venv venv

      - name: Activate python environment
        working-directory: ./backend
        run: source venv/bin/activate

      - name: Install backend dependencies
        working-directory: ./backend
        run: pip install --no-cache-dir -r requirements.txt

      - name: Start backend server
        working-directory: ./backend
        run: python manage.py runserver &

    # Install Cypress and run tests
      - name: Install Cypress
        working-directory: ./frontend
        run: npm install cypress --save-dev

      # Run Unit tests Django (Backend)
      - name: Run Unit tests Django
        working-directory: ./backend
        run: |
          coverage run manage.py test
          coverage report > coverage_report.json

      # Save coverage report to repository
      - name: Save coverage report 
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./backend/coverage_report.json

      # Run Unit tests Jest (Frontend)
      - name: Run Unit Tests (Frontend)
        working-directory: ./frontend
        run: npm run coverage > jest-report.json

      # Save Jest tests as artifacts
      - name: Save Jest report
        uses: actions/upload-artifact@v2
        with:
          name: jest-report
          path: ./frontend/coverage/jest-report.json

      # Run Integration Tests (Backend)
      - name: Run Integration Tests (Backend)
        working-directory: ./backend
        run: echo " Implementation not made yet "

      # Run Integration Tests (Frontend)
      - name: Run Integration Tests (Frontend)
        working-directory: ./frontend
        run: echo " Implementation not made yet "

      - name: Run System tests
        working-directory: ./frontend
        run: npx cypress run > reports_cypress.json

      # Save Cypress tests as artifacts
      - name: Save Cypress report
        uses: actions/upload-artifact@v2
        with:
          name: cypress-report
          path: ./frontend/reports_cypress.json
          

      

      
